.. _cpp_vehicle_detector_example:

C++ Vehicle Detector Example
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Initialize vehicle detector model

.. code-block:: c++

    oneML::alpr::VehicleDetector detector;

Initialize vehicle detector model with licensing

.. code-block:: c++

    oneML::LicenseManager license_manager;
    license_manager.set_key("LICENSE_KEY_VALUE_HERE");
    license_manager.activate_key();
    oneML::alpr::VehicleDetector detector(license_manager);

Initialize oneML's Utils

.. code-block:: c++

    oneML::Utils utils;

Initialize oneML's Utils with licensing

.. code-block:: c++

    oneML::Utils utils(license_manager);
    
Create oneML's MultiImage input and outputs object

.. code-block:: c++

    oneML::MultiImage inputs{img1, img2, ...  img4};
    std::vector<oneML::alpr::VehicleDetectorResult> outputs;

Create oneML's Image input and output object

.. code-block:: c++

    oneML::Image img;
    utils.read_image_cv(path, img);
    oneML::alpr::VehicleDetectorResult output;

Run the model

.. code-block:: c++

    detector.detect(inputs, outputs);

or

.. code-block:: c++

    detector.detect(img, output);
